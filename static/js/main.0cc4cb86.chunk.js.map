{"version":3,"sources":["Components/grid.js","Components/model.js","Components/memory.js","Logic/gameLogic.js","Components/game.js","Components/MyParticels.js","App.js","index.js"],"names":["Grid","props","button1","bind","button2","button3","button4","this","handler1","handler2","handler3","handler4","className","id","points","reward","class","grid","onClick","state","React","Component","Model","hiddenLayerSizeOrModel","numStates","numActions","batchSize","tf","network","summary","compile","optimizer","loss","defineModel","hiddenLayerSizes","Array","isArray","forEach","hiddenLayerSize","i","add","dense","units","activation","inputShape","undefined","states","predict","xBatch","yBatch","a","fit","eps","Math","random","floor","argMax","dataSync","Memory","maxMemory","samples","sample","push","length","shift","nSamples","sampleSize","GameLogic","size","matrix","temp","j","mat","point","n","sqrt","res","b","new_game","done","count","game","transpose","res_cover","cover_up","merge","reverse","element","document","getElementById","html","children","innerHTML","style","background","Game","game_state","model","memory","test1","test2","test3","test4","onKeyPressed","run","rewardStore","maxCellStore","add_two","setState","console","log","ms","Promise","resolve","setTimeout","t0","performance","now","chooseAction","stateToArray","action","get_max_cell","reset","t1","e","key","up","left","down","right","changeCellsColor","old_points","new_points","count_point","tabIndex","onKeyDown","ref","gridRef","MyParticels","particlesInit","particlesLoaded","main","container","init","loaded","height","window","outerHeight","options","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0cc4cb86.chunk.js","sourcesContent":["import React from 'react';\n\nclass Grid extends React.Component{\n    constructor(props){\n        super(props);\n        this.button1 = this.button1.bind(this);\n        this.button2 = this.button2.bind(this);\n        this.button3 = this.button3.bind(this);\n        this.button4 = this.button4.bind(this);\n    }\n\n    button1(){this.props.handler1();}\n    button2(){this.props.handler2();}\n    button3(){this.props.handler3();}\n    button4(){this.props.handler4();}\n\n    render() {\n        return(\n            <div className=\"all\">\n                <div id=\"Title\">REACT 2048 With AI (Reinforcemnt Learning)</div>\n                <div className=\"Points\">{this.props.points}</div>\n                <div className=\"Points\">{this.props.reward}</div>\n                <div id=\"grid\">\n                    <div class=\"cell\" id=\"cell_1\" ><div className=\"internalCell\">{this.props.grid[0][0]}</div></div>\n                    <div class=\"cell\" id=\"cell_2\" ><div className=\"internalCell\">{this.props.grid[0][1]}</div></div>\n                    <div class=\"cell\" id=\"cell_3\" ><div className=\"internalCell\">{this.props.grid[0][2]}</div></div>\n                    <div class=\"cell\" id=\"cell_4\" ><div className=\"internalCell\">{this.props.grid[0][3]}</div></div>\n                    <div class=\"cell\" id=\"cell_5\" ><div className=\"internalCell\">{this.props.grid[1][0]}</div></div>\n                    <div class=\"cell\" id=\"cell_6\" ><div className=\"internalCell\">{this.props.grid[1][1]}</div></div>\n                    <div class=\"cell\" id=\"cell_7\" ><div className=\"internalCell\">{this.props.grid[1][2]}</div></div>\n                    <div class=\"cell\" id=\"cell_8\" ><div className=\"internalCell\">{this.props.grid[1][3]}</div></div>\n                    <div class=\"cell\" id=\"cell_9\" ><div className=\"internalCell\">{this.props.grid[2][0]}</div></div>\n                    <div class=\"cell\" id=\"cell_10\"><div className=\"internalCell\">{this.props.grid[2][1]}</div></div>\n                    <div class=\"cell\" id=\"cell_11\"><div className=\"internalCell\">{this.props.grid[2][2]}</div></div>\n                    <div class=\"cell\" id=\"cell_12\"><div className=\"internalCell\">{this.props.grid[2][3]}</div></div>\n                    <div class=\"cell\" id=\"cell_13\"><div className=\"internalCell\">{this.props.grid[3][0]}</div></div>\n                    <div class=\"cell\" id=\"cell_14\"><div className=\"internalCell\">{this.props.grid[3][1]}</div></div>\n                    <div class=\"cell\" id=\"cell_15\"><div className=\"internalCell\">{this.props.grid[3][2]}</div></div>\n                    <div class=\"cell\" id=\"cell_16\"><div className=\"internalCell\">{this.props.grid[3][3]}</div></div>\n                </div>\n                <div class=\"Buttons\" >\n                    <div id=\"Button1\" onClick={() => this.button1()}>test1</div>\n                    <div id=\"Button2\" onClick={() => this.button2()}>test2</div>\n                    <div id=\"Button3\" onClick={() => this.button3()}>test3</div>\n                    <div id=\"Button4\" onClick={() => this.button4()}>Restart Game</div>\n                </div>\n                <div className=\"State\">{this.props.state}</div>\n                \n            </div>\n        )\n    }\n}\n\nexport default Grid;","import * as tf from '@tensorflow/tfjs';\n\nexport class Model{\n\n    constructor(hiddenLayerSizeOrModel, numStates, numActions, batchSize){\n        this.numStates = numStates;\n        this.numActions = numActions;\n        this.batchSize = batchSize;\n\n        if(hiddenLayerSizeOrModel instanceof tf.LayersModel){\n            this.network = hiddenLayerSizeOrModel;\n            this.network.summary();\n            this.network.compile({optimizer: 'adam', loss: 'meanSquaredError'});\n        }\n        else{\n            this.defineModel(hiddenLayerSizeOrModel);\n        }\n    }\n\n    defineModel(hiddenLayerSizes){\n        if (!Array.isArray(hiddenLayerSizes)){\n            hiddenLayerSizes = [hiddenLayerSizes]\n        }\n        this.network = tf.sequential();\n        hiddenLayerSizes.forEach((hiddenLayerSize, i) => {\n            this.network.add(tf.layers.dense({\n                units: hiddenLayerSize,\n                activation: 'relu',\n                inputShape: i === 0 ? [this.numStates] : undefined\n            }))\n        })\n        this.network.add(tf.layers.dense({units: this.numActions}));\n\n        this.network.summary();\n        this.network.compile({optimizer: 'adam', loss: 'meanSquaredError'});\n    }\n\n    //used as a garbage collector\n    predict(states){\n        return tf.tidy(() => this.network.predict(states));\n    }\n\n    async train(xBatch, yBatch){\n        await this.network.fit(xBatch, yBatch);\n    }\n\n    chooseAction(state, eps){\n        if(Math.random() < eps){\n            return Math.floor(Math.random() * this.numActions);\n        }\n        else{\n            return tf.tidy(() => {\n                return this.network.predict(state).argMax(1).dataSync()[0];\n            })\n        }\n    }\n\n\n}","import { sampleSize } from 'lodash';\n\nexport class Memory{\n\n    constructor(maxMemory){\n        this.maxMemory = maxMemory;\n        this.samples = new Array();\n    }\n\n    addSample(sample){\n        this.sample.push(sample);\n        if (this.samples.length > this.maxMemory) {\n            this.samples.shift();\n        }\n    }\n\n    sample(nSamples){\n        return sampleSize(this.samples, nSamples);\n    }\n\n}","export class GameLogic {\n    constructor(size){\n        this.size = size;\n    }\n\n    new_game(){\n        //init game\n        var matrix = [];\n        for(var i = 0; i < this.size; i++){\n            var temp = [];\n            for(var j = 0; j < this.size; j++){\n                temp.push(0);\n            }\n            matrix.push(temp);\n        }\n        return matrix;\n    }\n\n    count_point(mat){\n        //count the points on board\n        var point = 0;\n        var n = 0;\n        for(var i = 0; i < this.size; i++){\n            for(var j = 0; j < this.size; j++){\n                n = Math.floor(Math.sqrt(mat[i][j]))\n                if(n > 1){\n                    point += ((n - 1) * mat[i][j])\n                }\n            }\n        }\n        return point; \n    }\n\n    get_max_cell(mat){\n        var res = 0;\n        for(var i = 0; i < this.size; i++){\n            for(var j = 0; j < this.size; j++){\n                if (res < mat[i][j])\n                    res = mat[i][j];\n            }\n        }\n        return res;\n    }\n    \n    add_two(mat){\n        //add a 2 in a random position\n        var a = Math.floor(Math.random() * this.size);\n        var b = Math.floor(Math.random() * this.size);\n        while(mat[a][b] !== 0){\n            a = Math.floor(Math.random() * this.size);\n            b = Math.floor(Math.random() * this.size);\n        }\n        mat[a][b] = 2;\n        return mat;\n    }\n\n    game_state(mat){\n        //check if there is a 2048\n        for(var i = 0; i < this.size; i++){\n            for(var j = 0; j < this.size; j++){\n                if (mat[i][j]===2048){\n                    return \"win\";\n                }\n            }\n        }\n        //check if there are some zeros\n        for(i = 0; i < this.size; i++){\n            for(j = 0; j < this.size; j++){\n                if (mat[i][j]===0){\n                    return \"not over\";\n                }\n            }\n        }\n        //check if ther is an equal number down or right (in a sub-matrix 3x3)\n        for(i = 0; i < this.size - 1; i++){\n            for(j = 0; j < this.size - 1; j++){\n                if (mat[i][j]===mat[i+1][j] || mat[i][j+1]===mat[i][j]){\n                    return \"not over\";\n                }\n            }\n        }\n        //check last rows\n        for(i = 0; i < this.size - 1; i++){\n            if (mat[this.size-1][i+1] === mat[this.size - 1][i]){\n                return \"not over\";\n            }\n        }\n        //check last column\n        for(i = 0; i < this.size - 1; i++){\n            if (mat[i][this.size-1] === mat[i+1][this.size-1]){\n                return \"not over\";\n            }\n        }\n        return \"lose\";\n    }\n\n    reverse(mat){\n        var res = [];\n        for(var i = 0; i < this.size; i++){\n            res.push([])\n            for(var j = 0; j < this.size; j++){\n                res[i].push(mat[i][this.size-j-1])\n            }\n        }\n        return res\n    }\n\n    transpose(mat){\n        var res = [];\n        for(var i = 0; i < this.size; i++){\n            res.push([])\n            for(var j = 0; j < this.size; j++){\n                res[i].push(mat[j][i])\n            }\n        }\n        return res\n    }\n\n    cover_up(mat){\n        var res = this.new_game(this.size);\n        var done = false;\n        for(var i = 0; i < this.size; i++){\n            var count=0\n            for(var j = 0; j < this.size; j++){\n                if (mat[i][j] !== 0){\n                    res[i][count]=mat[i][j];\n                    if(j !== count) done=true;\n                    count++;\n                }\n            }\n        }\n        return [res,done];\n    }\n\n    merge(mat){\n        var done = false\n        for(var i = 0; i < this.size; i++){\n            for(var j = 0; j < this.size - 1; j++){\n                if (mat[i][j]==mat[i][j+1] && mat[i][j]!=0){\n                    mat[i][j]*=2;\n                    mat[i][j+1]=0;\n                    done=true;\n                }\n            }\n        }\n        return [mat,done];\n    }\n\n    up(game){\n        // return matrix after shifting up\n        game = this.transpose(game);\n        var res_cover = this.cover_up(game);\n        game = res_cover[0];\n        var done = res_cover[1];\n        var temp = this.merge(game);\n        game = temp[0];\n        done = done || temp[1];\n        game = this.cover_up(game)[0];\n        game = this.transpose(game);\n        return [game,done];\n    }\n\n    down(game){\n        // return matrix after shifting up\n        game = this.reverse(this.transpose(game));\n        var res_cover = this.cover_up(game);\n        game = res_cover[0];\n        var done = res_cover[1];\n        var temp = this.merge(game);\n        game = temp[0];\n        done = done || temp[1];\n        game = this.cover_up(game)[0];\n        game = this.transpose(this.reverse(game));\n        return [game,done];\n    }\n\n    left(game){\n        // return matrix after shifting left\n        var res_cover = this.cover_up(game);\n        game = res_cover[0];\n        var done = res_cover[1];\n        var temp = this.merge(game);\n        game = temp[0];\n        done = done || temp[1];\n        game = this.cover_up(game)[0];\n        return [game,done];\n    }\n\n    right(game){\n        // return matrix after shifting right\n        game = this.reverse(game);\n        var res_cover = this.cover_up(game);\n        game = res_cover[0];\n        var done = res_cover[1];\n        var temp = this.merge(game);\n        game = temp[0];\n        done = done || temp[1];\n        game = this.cover_up(game)[0];\n        game = this.reverse(game);\n        return [game,done];\n    }\n\n    changeCellsColor(){\n        for(var i = 1; i <= this.size * this.size ; i++){\n            var element = document.getElementById(\"cell_\" + i);\n            var html = element.children[0].innerHTML;\n            if (html === \"0\")      element.style.background = \"rgba(19, 60, 85)\";\n            if (html === \"2\")      element.style.background = \"rgba(56, 111, 164)\";\n            if (html === \"4\")      element.style.background = \"rgba(89, 165, 216)\";\n            if (html === \"8\")      element.style.background = \"rgba(130, 205, 236)\";\n            if (html === \"16\")     element.style.background = \"rgba(145, 229, 246)\";\n            if (html === \"32\")     element.style.background = \"rgba(19, 94, 85)\";\n            if (html === \"64\")     element.style.background = \"rgba(56, 154, 128)\";\n            if (html === \"128\")    element.style.background = \"rgba(89, 201, 170)\";\n            if (html === \"256\")    element.style.background = \"rgba(162, 238, 201)\";\n            if (html === \"512\")    element.style.background = \"rgba(162, 255, 194)\";\n            if (html === \"1024\")   element.style.background = \"yellow\";\n            if (html === \"2048\")   element.style.background = \"yellow\";\n            if (html === \"4096\")   element.style.background = \"yellow\";\n            if (html === \"8192\")   element.style.background = \"yellow\";\n            if (html === \"16384\")  element.style.background = \"yellow\";\n            if (html === \"32768\")  element.style.background = \"yellow\";\n            if (html === \"65536\")  element.style.background = \"yellow\";\n            if (html === \"131072\") element.style.background = \"yellow\";\n        }\n        \n    }\n}","import React from 'react';\nimport Grid from './grid.js';\nimport { Model } from './model.js';\nimport * as tf from '@tensorflow/tfjs';\nimport { Memory } from './memory.js';\nimport { GameLogic} from './../Logic/gameLogic.js';\n\nclass Game extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            grid: [[0,0,0,0],\n                   [0,0,0,0],\n                   [0,0,0,0],\n                   [0,0,0,0]],\n            points: 0,\n            reward: 0,\n            game_state: \"not over\",\n            model: new Model(16, 16, 3, 0),\n            memory: new Memory(10000)\n        }\n        this.test1 = this.test1.bind(this);\n        this.test2 = this.test2.bind(this);\n        this.test3 = this.test3.bind(this);\n        this.test4 = this.test4.bind(this);\n        this.onKeyPressed = this.onKeyPressed.bind(this);\n        this.GameLogic = new GameLogic(4);\n        this.run = this.run.bind(this);\n\n        this.rewardStore = [];\n        this.maxCellStore = [];\n    }\n\n    test1() { this.run(); }\n    test2() {  }\n    test3() {  }\n    test4() { var mat = this.add_two(this.new_game(this.state.size));\n              this.setState({grid: mat});}\n\n\n    //////////////\n    //    AI    //\n    //////////////\n\n    chooseAction(){\n        var random = Math.floor(Math.random() * 4);\n        console.log(random);\n        if(random === 0) this.onKeyPressed(\"up\");\n        if(random === 1) this.onKeyPressed(\"down\");\n        if(random === 2) this.onKeyPressed(\"left\");\n        if(random === 3) this.onKeyPressed(\"right\");\n    }\n\n    stateToArray(){\n        var mat = this.state.grid;\n        var res = [];\n        for(var i = 0; i < mat.length; i++){\n            for(var j = 0; j < mat[i].length; j++){\n                res.push(mat[i][j]);\n            }\n        }\n        return tf.tensor2d([res]);\n    }\n\n    timeout(ms) { //pass a time in milliseconds to this function\n        return new Promise(resolve => setTimeout(resolve, ms));\n      }\n\n    async run(){\n        var i = 0;\n        //se memory è vuoto allora fa tante mosse\n        var t0 = performance.now();\n\n        //se la memoria è vuota prima la riempie di mosse casuali\n        // TO DO\n\n        while(i < 10000){\n            //vecchio stato\n            var old_points = this.state.points;\n            var old_grid = this.state.grid;\n            var old_game_state = this.state.game_state;\n\n            //azione\n            var action = await this.state.model.chooseAction(this.stateToArray(), 1);\n            await this.onKeyPressed(action);\n\n            //risultato azione\n            var reward = this.state.reward;\n            var new_game_state = this.state.game_state;\n            var new_grid = this.state.grid;\n\n            //se la partita finisce segna il traguardo e resetta\n            if(this.state.game_state === 'lose' || this.state.game_state === 'win'){\n                this.rewardStore.push(this.state.points);\n                this.maxCellStore.push(this.GameLogic.get_max_cell(this.state.grid));\n                this.reset(4);\n            }\n\n            //salva in memoria il risultato\n            //this.state.memory.addSample([old_grid, action, reward, new_game_state]);\n            //TODO\n\n            i++;\n            if(i%1000 === 0){\n                console.log(i);\n            }\n            \n            //console.log(action);\n        }\n        var t1 = performance.now();\n        console.log(\"Call to doSomething took \" + (t1 - t0) + \" milliseconds.\");\n        console.log(this.rewardStore);\n        console.log(this.maxCellStore);\n        \n    }\n\n    reset(n){\n        this.setState({grid: this.GameLogic.add_two(this.GameLogic.new_game(this.state.size))});\n    }\n\n    onKeyPressed(e){\n        var temp = null;\n        if(e.key === \"w\" || e.key === \"ArrowUp\" || e === \"up\" || e === 0){\n            //console.log(\"UP\");\n            temp = this.GameLogic.up(this.state.grid);\n        }\n        if(e.key === \"a\" || e.key === \"ArrowLeft\" || e === \"left\"  || e === 1){\n            //console.log(\"LEFT\");\n            temp = this.GameLogic.left(this.state.grid);\n        }\n        if(e.key === \"s\" || e.key === \"ArrowDown\" || e === \"down\"  || e === 2){\n            //console.log(\"DOWN\");\n            temp = this.GameLogic.down(this.state.grid);\n        }\n        if(e.key === \"d\" || e.key === \"ArrowRight\" || e === \"right\"  || e === 3){\n            //console.log(\"RIGTH\");\n            temp = this.GameLogic.right(this.state.grid);\n        }\n        this.setState({grid: temp[0]});\n        this.GameLogic.changeCellsColor();\n        if(temp[1]){\n            var old_points = this.state.points;\n            var new_points = this.GameLogic.count_point(this.state.grid);\n            var reward = new_points - old_points;\n            this.setState({reward: reward});\n            this.setState({points: new_points});\n            this.setState({grid: this.GameLogic.add_two(temp[0])});\n            this.setState({game_state: this.GameLogic.game_state(this.state.grid)});\n        }\n        else{\n            this.setState({game_state: this.GameLogic.game_state(this.state.grid)});\n            if(this.state.game_state == 'win') console.log(\"You Win!\");\n            if(this.state.game_state == 'lose') console.log(\"You Lose!\");\n        }\n    }\n\n    componentDidMount(){\n        this.setState({grid: this.GameLogic.add_two(this.state.grid)});\n    }\n\n    componentDidUpdate(){\n        this.GameLogic.changeCellsColor();\n    }\n    \n    render() {\n        return(\n        <div tabIndex=\"-1\" onKeyDown={this.onKeyPressed} className=\"all2\">\n            <Grid grid={this.state.grid}\n                  reward={this.state.reward}\n                  points={this.state.points}\n                  state={this.state.state}\n                  ref={this.gridRef}\n                  handler1={this.test1}\n                  handler2={this.test2}\n                  handler3={this.test3}\n                  handler4={this.test4}/>\n        </div>\n        )\n    }\n}\n\nexport default Game;","import Particles from 'react-tsparticles';\nimport React from 'react';\n\nclass MyParticels extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        this.particlesInit = this.particlesInit.bind(this);\n        this.particlesLoaded = this.particlesLoaded.bind(this);\n      }\n    \n      particlesInit(main) {\n        console.log(main);\n    \n        // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n      }\n    \n      particlesLoaded(container) {\n        console.log(container);\n      }\n    \n      render() {\n        return (\n          <Particles\n            id=\"tsparticles\"\n            init={this.particlesInit}\n            loaded={this.particlesLoaded}\n            height={window.outerHeight * 1.2}\n            options={{\n              \"autoPlay\": true,\n              \"background\": {\n                \"color\": {\n                  \"value\": \"#232741\"\n                },\n              },\n              \"backgroundMask\": {\n                \"composite\": \"destination-out\",\n                \"cover\": {\n                  \"color\": {\n                    \"value\": \"#fff\"\n                  },\n                  \"opacity\": 1\n                },\n                \"enable\": false\n              },\n              \"fullScreen\": {\n                \"enable\": true,\n                \"zIndex\": 1\n              },\n              \"detectRetina\": true,\n              \"fpsLimit\": 60,\n              \"infection\": {\n                \"cure\": false,\n                \"delay\": 0,\n                \"enable\": false,\n                \"infections\": 0,\n                \"stages\": []\n              },\n              \"interactivity\": {\n                \"detectsOn\": \"canvas\",\n                \"events\": {\n                  \"onClick\": {\n                    \"enable\": true,\n                    \"mode\": \"repulse\"\n                  },\n                  \"onDiv\": {\n                    \"selectors\": [],\n                    \"enable\": false,\n                    \"mode\": [],\n                    \"type\": \"circle\"\n                  },\n                  \"onHover\": {\n                    \"enable\": true,\n                    \"mode\": \"bubble\",\n                    \"parallax\": {\n                      \"enable\": false,\n                      \"force\": 2,\n                      \"smooth\": 10\n                    }\n                  },\n                  \"resize\": true\n                },\n                \"modes\": {\n                  \"attract\": {\n                    \"distance\": 200,\n                    \"duration\": 0.4,\n                    \"speed\": 1\n                  },\n                  \"bounce\": {\n                    \"distance\": 200\n                  },\n                  \"bubble\": {\n                    \"distance\": 250,\n                    \"duration\": 2,\n                    \"opacity\": 0,\n                    \"size\": 0\n                  },\n                  \"connect\": {\n                    \"distance\": 80,\n                    \"links\": {\n                      \"opacity\": 0.5\n                    },\n                    \"radius\": 60\n                  },\n                  \"grab\": {\n                    \"distance\": 400,\n                    \"links\": {\n                      \"blink\": false,\n                      \"consent\": false,\n                      \"opacity\": 1\n                    }\n                  },\n                  \"light\": {\n                    \"area\": {\n                      \"gradient\": {\n                        \"start\": {\n                          \"value\": \"#ffffff\"\n                        },\n                        \"stop\": {\n                          \"value\": \"#000000\"\n                        }\n                      },\n                      \"radius\": 1000\n                    },\n                    \"shadow\": {\n                      \"color\": {\n                        \"value\": \"#000000\"\n                      },\n                      \"length\": 2000\n                    }\n                  },\n                  \"push\": {\n                    \"quantity\": 4\n                  },\n                  \"remove\": {\n                    \"quantity\": 2\n                  },\n                  \"repulse\": {\n                    \"distance\": 400,\n                    \"duration\": 0.4,\n                    \"speed\": 1\n                  },\n                  \"slow\": {\n                    \"factor\": 3,\n                    \"radius\": 200\n                  },\n                  \"trail\": {\n                    \"delay\": 1,\n                    \"quantity\": 1\n                  }\n                }\n              },\n              \"manualParticles\": [],\n              \"motion\": {\n                \"disable\": false,\n                \"reduce\": {\n                  \"factor\": 4,\n                  \"value\": true\n                }\n              },\n              \"particles\": {\n                \"bounce\": {\n                  \"horizontal\": {\n                    \"random\": {\n                      \"enable\": false,\n                      \"minimumValue\": 0.1\n                    },\n                    \"value\": 1\n                  },\n                  \"vertical\": {\n                    \"random\": {\n                      \"enable\": false,\n                      \"minimumValue\": 0.1\n                    },\n                    \"value\": 1\n                  }\n                },\n                \"collisions\": {\n                  \"bounce\": {\n                    \"horizontal\": {\n                      \"random\": {\n                        \"enable\": false,\n                        \"minimumValue\": 0.1\n                      },\n                      \"value\": 1\n                    },\n                    \"vertical\": {\n                      \"random\": {\n                        \"enable\": false,\n                        \"minimumValue\": 0.1\n                      },\n                      \"value\": 1\n                    }\n                  },\n                  \"enable\": false,\n                  \"mode\": \"bounce\",\n                  \"overlap\": {\n                    \"enable\": true,\n                    \"retries\": 0\n                  }\n                },\n                \"color\": {\n                  \"value\": \"#ffffff\",\n                  \"animation\": {\n                    \"h\": {\n                      \"count\": 0,\n                      \"enable\": false,\n                      \"offset\": 0,\n                      \"speed\": 1,\n                      \"sync\": true\n                    },\n                    \"s\": {\n                      \"count\": 0,\n                      \"enable\": false,\n                      \"offset\": 0,\n                      \"speed\": 1,\n                      \"sync\": true\n                    },\n                    \"l\": {\n                      \"count\": 0,\n                      \"enable\": false,\n                      \"offset\": 0,\n                      \"speed\": 1,\n                      \"sync\": true\n                    }\n                  }\n                },\n                \"life\": {\n                  \"count\": 0,\n                  \"delay\": {\n                    \"random\": {\n                      \"enable\": false,\n                      \"minimumValue\": 0\n                    },\n                    \"value\": 0,\n                    \"sync\": false\n                  },\n                  \"duration\": {\n                    \"random\": {\n                      \"enable\": false,\n                      \"minimumValue\": 0.0001\n                    },\n                    \"value\": 0,\n                    \"sync\": false\n                  }\n                },\n                \"links\": {\n                  \"blink\": false,\n                  \"color\": {\n                    \"value\": \"#ffffff\"\n                  },\n                  \"consent\": false,\n                  \"distance\": 150,\n                  \"enable\": false,\n                  \"frequency\": 1,\n                  \"opacity\": 0.4,\n                  \"shadow\": {\n                    \"blur\": 5,\n                    \"color\": {\n                      \"value\": \"#00ff00\"\n                    },\n                    \"enable\": false\n                  },\n                  \"triangles\": {\n                    \"enable\": false,\n                    \"frequency\": 1\n                  },\n                  \"width\": 1,\n                  \"warp\": false\n                },\n                \"move\": {\n                  \"angle\": {\n                    \"offset\": 45,\n                    \"value\": 90\n                  },\n                  \"attract\": {\n                    \"enable\": false,\n                    \"rotate\": {\n                      \"x\": 600,\n                      \"y\": 600\n                    }\n                  },\n                  \"decay\": 0,\n                  \"distance\": 0,\n                  \"direction\": \"none\",\n                  \"drift\": 0,\n                  \"enable\": true,\n                  \"gravity\": {\n                    \"acceleration\": 9.81,\n                    \"enable\": false,\n                    \"maxSpeed\": 50\n                  },\n                  \"path\": {\n                    \"clamp\": true,\n                    \"delay\": {\n                      \"random\": {\n                        \"enable\": false,\n                        \"minimumValue\": 0\n                      },\n                      \"value\": 0\n                    },\n                    \"enable\": false\n                  },\n                  \"outModes\": {\n                    \"default\": \"out\",\n                    \"bottom\": \"out\",\n                    \"left\": \"out\",\n                    \"right\": \"out\",\n                    \"top\": \"out\"\n                  },\n                  \"random\": true,\n                  \"size\": false,\n                  \"speed\": 1,\n                  \"straight\": false,\n                  \"trail\": {\n                    \"enable\": false,\n                    \"length\": 10,\n                    \"fillColor\": {\n                      \"value\": \"#000000\"\n                    }\n                  },\n                  \"vibrate\": false,\n                  \"warp\": false\n                },\n                \"number\": {\n                  \"density\": {\n                    \"enable\": true,\n                    \"area\": 800,\n                    \"factor\": 1000\n                  },\n                  \"limit\": 0,\n                  \"value\": 160\n                },\n                \"opacity\": {\n                  \"random\": {\n                    \"enable\": true,\n                    \"minimumValue\": 0.1\n                  },\n                  \"value\": {\n                    \"min\": 0,\n                    \"max\": 1\n                  },\n                  \"animation\": {\n                    \"count\": 0,\n                    \"enable\": true,\n                    \"speed\": 1,\n                    \"sync\": false,\n                    \"destroy\": \"none\",\n                    \"minimumValue\": 0,\n                    \"startValue\": \"random\"\n                  }\n                },\n                \"reduceDuplicates\": false,\n                \"rotate\": {\n                  \"random\": {\n                    \"enable\": false,\n                    \"minimumValue\": 0\n                  },\n                  \"value\": {\n                    \"min\": 0,\n                    \"max\": 360\n                  },\n                  \"animation\": {\n                    \"enable\": false,\n                    \"speed\": 0,\n                    \"sync\": false\n                  },\n                  \"direction\": \"clockwise\",\n                  \"path\": false\n                },\n                \"shadow\": {\n                  \"blur\": 0,\n                  \"color\": {\n                    \"value\": \"#000000\"\n                  },\n                  \"enable\": false,\n                  \"offset\": {\n                    \"x\": 0,\n                    \"y\": 0\n                  }\n                },\n                \"shape\": {\n                  \"options\": {},\n                  \"type\": \"circle\"\n                },\n                \"size\": {\n                  \"random\": {\n                    \"enable\": true,\n                    \"minimumValue\": 1\n                  },\n                  \"value\": {\n                    \"min\": 1,\n                    \"max\": 3\n                  },\n                  \"animation\": {\n                    \"count\": 0,\n                    \"enable\": false,\n                    \"speed\": 4,\n                    \"sync\": false,\n                    \"destroy\": \"none\",\n                    \"minimumValue\": 0.3,\n                    \"startValue\": \"random\"\n                  }\n                },\n                \"stroke\": {\n                  \"width\": 0\n                },\n                \"twinkle\": {\n                  \"lines\": {\n                    \"enable\": false,\n                    \"frequency\": 0.05,\n                    \"opacity\": 1\n                  },\n                  \"particles\": {\n                    \"enable\": false,\n                    \"frequency\": 0.05,\n                    \"opacity\": 1\n                  }\n                }\n              },\n              \"pauseOnBlur\": true,\n              \"pauseOnOutsideViewport\": true,\n              \"responsive\": [],\n              \"themes\": []\n            }}\n          />\n        );\n      }\n    }\n\nexport default MyParticels;","import './css/App.css';\nimport './css/Grid.css';\nimport React from 'react';\nimport Game from './Components/game';\nimport MyParticels from './Components/MyParticels';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return(\n    <div id=\"App\">\n          <MyParticels className=\"particelsAsBackground\"></ MyParticels>\n          <div id=\"App2\">\n            <Game className=\"Game\"/>\n          </div>\n    </div>\n  );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}